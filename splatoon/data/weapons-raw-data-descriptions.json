{
  "shooter": {
    "mRepeatFrame": "frames between shots when trigger is depressed",
    "mTripleShotSpan": "frames between triple shots for L3 and H3",
    "mInitVel": "distance traveled per frame for mStraightFrame",
    "mDegRandom": "maximum angle that shots will vary while standing on the ground",
    "mDegJumpRandom": "maximum angle that shots will vary while in the air",
    "mSplashSplitNum": "(google translated) The number of patterns of trajectory",
    "mKnockBack": "knock back when firing",
    "mInkConsume": "percentage of a full tank for firing one shot",
    "mInkRecoverStop": "frames of delay after firing before allowing ink to recover",
    "mMoveSpeed": "movement speed while firing",
    "mDamageMax": "damage done during mStraightFrame",
    "mDamageMin": "minimum damage done from damage falloff",
    "mDamageMinFrame": "frames before reaching minimum damage",
    "mStraightFrame": "frames to travel before allowing gravity to affect shot",
    "mGuideCheckCollisionFrame": "(google translate) This frame after damage reduction. The presence or absence of the sighting also use this? [my guess is the frames to wait before allowing another hit to land?]",
    "mCreateSplashNum": "(google translate) Painting number of trajectory",
    "mCreateSplashLength": "(google translate) Interval of splash to fall until landing",
    "mDrawRadius": "?",
    "mColRadius": "?",
    "mPaintNearDistance": "?",
    "mPaintFarDistance": "?",
    "mPaintNearRadius": "The size of the closer painting blobs?",
    "mPaintFarRadius": "The size of the far painting blobs?",
    "mSplashDrawRadius": "?",
    "mSplashColRadius": "?",
    "mSplashPaintRadius": "The radius of the painting blobs fall until landing",
    "mDegBias": "this and mDegBiasKf determine how often droplets are torwards the edge of mDegRandom",
    "mDegBiasKf": "this and mDegBias determine how often droplets are torwards the edge of mDegRandom",
    "mDegJumpBias": "bias when jumping?",
    "mDegJumpBiasFrame": "my guess is the frames it takes for bias to return to normal after jumping"
  },
  "blaster": {
    "note": "see shooters for many parameters",
    "mExplosionFrame": "number of frames of the explosion animation?",
    "mExplosionSleep": "?",
    "mDamageNear": "near damage",
    "mCollisionRadiusNear": "near damage radius",
    "mDamageMiddle": "middle damage",
    "mCollisionRadiusMiddle": "middle damage radius",
    "mDamageFar": "far damage",
    "mCollisionRadiusFar": "far damage radius",
    "mShotCollisionHitDamageRate": "?",
    "mShotCollisionHitRadiusRate": "?",
    "mKnockBackRadius": "?",
    "mMoveLength": "?",
    "mSphereSplashDropOn": "?",
    "mSphereSplashDropInitSpeed": "?",
    "mSphereSplashDropCollisionRadius": "?",
    "mSphereSplashDropDrawRadius": "?",
    "mSphereSplashDropPaintRadius": "?",
    "mSphereSplashDropPaintShotCollisionHitRadius": "?",
    "mBoundPaintMaxRadius": "?",
    "mBoundPaintMinRadius": "?",
    "mBoundPaintMinDistanceXZ": "?",
    "mWallHitPaintRadius": "?",
    "mPreDelayFrm_HumanMain": "Frames after pulling trigger before shot is released from kid form",
    "mPreDelayFrm_SquidMain": "Frames after pulling trigger before shot is released from squid form",
    "mPostDelayFrm_Main": "Frames after shooting before allowing to go into squid form"
  }
}
